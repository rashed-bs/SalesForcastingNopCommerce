@model PredictionSearchModel

@using Nop.Core
@inject Nop.Services.Common.IGenericAttributeService genericAttributeService
@inject IWorkContext workContext
@{
    NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/chart.js/Chart.min.js");
    const string prefix = "inventoryprediction-statistics";
    const string hideCardAttributeName = "Reports.HideCustomerStatisticsCard";
    var hideCard = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideCardAttributeName);
    const string hideSearchBlockAttributeName = "Prediction.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
    const string hideWeekBlockAttributeName = "Prediction.HideWeekBlock";
    var hideWeekBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideWeekBlockAttributeName);
}
<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="cards-group">
                <div>
                    @*<div class="card card-default card-search">
                    <div class="card-body">
                    <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                    <div class="search-text">@T("Admin.Common.Search")</div>
                    <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                    <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                    </div>

                    <div class="search-body @(hideSearchBlock ? "closed" : "")">
                    <div class="row">
                    <div class="col-md-5">
                    <div class="form-group row">
                    <div class="col-md-4">
                    <nop-label asp-for="CategoryId" />
                    </div>
                    <div class="col-md-8">
                    <nop-select asp-for="CategoryId" asp-items="Model.AvailableCategory" />
                    </div>
                    </div>
                    <div class="form-group row">
                    <div class="col-md-4">
                    <nop-label asp-for="LocationId" />
                    </div>
                    <div class="col-md-8">
                    <nop-select asp-for="CategoryId" asp-items="Model.AvailableLocation" />
                    </div>
                    </div>
                    <div class="form-group row">
                    <div class="col-md-4">
                    <nop-label asp-for="DiscountPercentage" />
                    </div>
                    <div class="col-md-8">
                    <nop-editor asp-for="DiscountPercentage" />
                    </div>
                    </div>
                    <div class="form-group row">
                    <div class="col-md-4">
                    <nop-label asp-for="ShippingCharge" />
                    </div>
                    <div class="col-md-8">
                    <nop-editor asp-for="ShippingCharge" />
                    </div>
                    </div>
                    </div>
                    </div>
                    <div class="row">
                    <div class="text-center col-12">
                    <button type="button" id="search-analysis" class="btn btn-primary btn-search">
                    <i class="fas fa-search"></i>
                    @T("Admin.Common.Search")
                    </button>
                    </div>
                    </div>
                    </div>
                    </div>
                    </div>
                    *@
                </div>
                @*sales by week time series chart*@
                <div class="card card-primary card-outline @if (hideCard){
                <text>collapsed-card</text>
 }" id="@(prefix)-card">
                    <div class="card-header with-border">
                        <h3 class="card-title">
                            <i class="far fa-user"></i>
                            @T("Weekly Sales Prediction")
                        </h3>
                        <div class="card-tools float-right">
                            <button class="btn btn-tool margin-l-10" data-card-widget="collapse">
                                @if (hideCard)
                                {
                                    <text><i class="fas fa-plus"></i></text>
                                }
                                else
                                {
                                    <text><i class="fas fa-minus"></i></text>
                                }
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="chart" style="height: 300px;">
                            <canvas id="@(prefix)-chart" height="300"></canvas>
                        </div>
                    </div>
                </div>

                @*sales by month chart*@
                <div class="card card-primary card-outline @if (hideCard){
                <text>collapsed-card</text>
}" id="@(prefix)-card">
                    <div class="card-header with-border">
                        <h3 class="card-title">
                            <i class="far fa-user"></i>
                            @T("Monthly Top Categories Combined Sales Prediction")
                        </h3>
                        <div class="card-tools float-right">
                            <button class="btn btn-tool margin-l-10" data-card-widget="collapse">
                                @if (hideCard)
                                {
                                    <text><i class="fas fa-plus"></i></text>
                                }
                                else
                                {
                                    <text><i class="fas fa-minus"></i></text>
                                }
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="chart" style="height: 300px;">
                            <canvas id="@(prefix)-chart-monthly-combined" height="300"></canvas>
                        </div>
                    </div>
                </div>

                @*sale contribution of categories*@
                <div class="card card-primary card-outline @if (hideCard){
                <text>collapsed-card</text>
}" id="@(prefix)-card">
                    <div class="card-header with-border">
                        <h3 class="card-title">
                            <i class="far fa-user"></i>
                            @T("Sales Contribution of categories")
                        </h3>
                        <div class="card-tools float-right">
                            <button class="btn btn-tool margin-l-10" data-card-widget="collapse">
                                @if (hideCard)
                                {
                                    <text><i class="fas fa-plus"></i></text>
                                }
                                else
                                {
                                    <text><i class="fas fa-minus"></i></text>
                                }
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="chart" style="height: 300px;">
                            <canvas id="@(prefix)-chart-monthly-category-contribution-pie" height="90"></canvas>
                        </div>
                    </div>
                </div>

                @*category sales vs stock*@
                <div class="card card-primary card-outline @if (hideCard){
                <text>collapsed-card</text>
}" id="@(prefix)-card">
                    <div class="card-header with-border">
                        <h3 class="card-title">
                            <i class="far fa-user"></i>
                            @T("Category Sales Vs Stock")
                        </h3>
                        <div class="card-tools float-right">
                            <button class="btn btn-tool margin-l-10" data-card-widget="collapse">
                                @if (hideCard)
                                {
                                    <text><i class="fas fa-plus"></i></text>
                                }
                                else
                                {
                                    <text><i class="fas fa-minus"></i></text>
                                }
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="chart" style="height: 300px;">
                            <canvas id="@(prefix)-chart-category-vs-stock-bar-chart" height="80"></canvas>
                        </div>
                    </div>
                </div>

                @*script for ajax and char functions*@
                <script>
                    $(document).ready(function () {
                        var color = [
                            "rgb(255, 99, 132)", "rgb(54, 162, 235)", "rgb(255, 205, 86)",
                            "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(255, 159, 64)",
                            "rgb(255, 192, 203)", "rgb(165, 42, 42)", "rgb(128, 128, 128)",
                            "rgb(0, 128, 128)", "rgb(0, 0, 255)", "rgb(0, 255, 0)",
                            "rgb(255, 0, 0)", "rgb(128, 0, 128)", "rgb(255, 255, 0)",
                            "rgb(0, 255, 255)", "rgb(128, 0, 0)", "rgb(0, 128, 0)",
                            "rgb(0, 0, 128)", "rgb(128, 128, 0)", "rgb(128, 128, 128)",
                            "rgb(192, 192, 192)", "rgb(255, 0, 255)", "rgb(0, 255, 255)",
                            "rgb(255, 255, 255)", "rgb(139, 0, 0)", "rgb(0, 139, 0)",
                            "rgb(0, 0, 139)", "rgb(139, 69, 19)", "rgb(139, 0, 139)",
                            "rgb(255, 99, 71)", "rgb(255, 140, 0)", "rgb(184, 134, 11)",
                            "rgb(218, 165, 32)", "rgb(255, 215, 0)", "rgb(154, 205, 50)",
                            "rgb(50, 205, 50)", "rgb(0, 128, 0)", "rgb(107, 142, 35)",
                            "rgb(0, 100, 0)", "rgb(0, 128, 128)", "rgb(32, 178, 170)",
                            "rgb(72, 209, 204)", "rgb(64, 224, 208)", "rgb(175, 238, 238)",
                            "rgb(0, 139, 139)", "rgb(0, 128, 128)", "rgb(176, 224, 230)",
                            "rgb(95, 158, 160)", "rgb(240, 255, 255)", "rgb(240, 248, 255)",
                            "rgb(230, 230, 250)", "rgb(255, 228, 225)", "rgb(255, 250, 240)",
                            "rgb(255, 245, 238)", "rgb(240, 255, 240)", "rgb(245, 255, 250)",
                            "rgb(240, 255, 255)", "rgb(240, 255, 240)", "rgb(255, 250, 250)",
                            "rgb(250, 250, 210)", "rgb(255, 239, 219)", "rgb(255, 228, 196)",
                            "rgb(255, 218, 185)", "rgb(250, 240, 230)", "rgb(253, 245, 230)",
                            "rgb(255, 228, 181)", "rgb(255, 222, 173)", "rgb(255, 231, 186)",
                            "rgb(255, 153, 18)", "rgb(227, 38, 54)", "rgb(139, 69, 19)",
                            "rgb(233, 150, 122)", "rgb(255, 245, 238)", "rgb(255, 218, 185)",
                            "rgb(245, 222, 179)", "rgb(255, 182, 193)", "rgb(255, 228, 225)",
                            "rgb(221, 160, 221)", "rgb(176, 224, 230)", "rgb(255, 240, 245)",
                            "rgb(255, 105, 180)", "rgb(205, 92, 92)", "rgb(255, 160, 122)",
                            "rgb(255, 69, 0)", "rgb(255, 99, 71)", "rgb(218, 112, 214)",
                            "rgb(186, 85, 211)", "rgb(147, 112, 219)", "rgb(138, 43, 226)",
                            "rgb(75, 0, 130)", "rgb(72, 61, 139)", "rgb(106, 90, 205)",
                            "rgb(123, 104, 238)", "rgb(0, 0, 205)", "rgb(0, 0, 139)"
                        ];

                        var model = {
                            CategoryId: $('#@Html.IdFor(model => model.CategoryId)').val(),
                            DiscountPercentage: $('#@Html.IdFor(model => model.DiscountPercentage)').val(),
                            ShippingCharge: $('#@Html.IdFor(model => model.ShippingCharge)').val(),
                            LocationId: $('#@Html.IdFor(model => model.LocationId)').val()
                        };

                        var csConfigWeeklySalesTimeSeries = {
                            type: 'line',
                            data: {
                                labels: [],
                                datasets: [
                                    {
                                        label: "@T("Plugins.NopStation.InventoryPrediction.Report.WeeklySalesQuantity")",
                                        fillColor: "rgba(60,141,188,0.9)",
                                        strokeColor: "rgba(60,141,188,0.8)",
                                        pointColor: "#00a65a",
                                        pointStrokeColor: "rgba(0,166,90,1)",
                                        pointHighlightFill: "#fff",
                                        pointHighlightStroke: "rgba(0,166,90,1)",
                                        borderColor: 'rgba(0,166,90, 1)',
                                        backgroundColor: 'rgba(0,166,90,0.5)',
                                        pointBorderColor: 'rgba(0,166,90,0.7)',
                                        pointBackgroundColor: 'rgba(0,166,90,0.2)',
                                        pointBorderWidth: 1,
                                        data: []
                                    }
                                ]
                            },
                            options: {
                                legend: {
                                    display: false
                                },
                                scales: {
                                    xAxes: [{
                                        display: true,
                                        ticks: {
                                            userCallback: function (dataLabel, index) {
                                                if (window.customerStatistics && window.customerStatistics.config.data.labels.length > 40) {
                                                    return index % 5 === 0 ? dataLabel : '';
                                                }
                                                return dataLabel;
                                            }
                                        },

                                    }],
                                    yAxes: [{
                                        display: true,
                                        ticks: {
                                            userCallback: function (dataLabel, index) {
                                                return (dataLabel ^ 0) === dataLabel ? dataLabel : '';
                                            },
                                            min: 0
                                        },
                                    }],


                                },
                                showScale: true,
                                scaleShowGridLines: false,
                                scaleGridLineColor: "rgba(0,0,0,.05)",
                                scaleGridLineWidth: 1,
                                scaleShowHorizontalLines: true,
                                scaleShowVerticalLines: true,
                                bezierCurve: true,
                                pointDot: false,
                                pointDotRadius: 4,
                                pointDotStrokeWidth: 1,
                                pointHitDetectionRadius: 20,
                                datasetStroke: true,
                                datasetFill: true,
                                maintainAspectRatio: false,
                                responsive: true,
                            }
                        };
                        function drawWeeklySalesPredictionByTimeSeries(model) {
                            var csLabels = [];
                            var csData = [];
                            console.log("Model: ", model);
                            $.ajax({
                                cache: false,
                                type: "GET",
                                url: "/Admin/SalesForecasting/GetWeeklySalesByTimeSeriesModel",
                                data: {
                                    CategoryId: model.CategoryId,
                                    DiscountPercentage: model.DiscountPercentage,
                                    ShippingCharge: model.ShippingCharge,
                                    LocationId: model.LocationId
                                },
                                success: function (data, textStatus, jqXHR) {
                                    for (var i = 0; i < data.length; i++) {
                                        csLabels.push(data[i].XLabelName);
                                        csData.push(data[i].YLabelValue);
                                    }
                                    if (!window.customerStatistics) {
                                        csConfigWeeklySalesTimeSeries.data.labels = csLabels;
                                        csConfigWeeklySalesTimeSeries.data.datasets[0].data = csData;
                                        window.customerStatistics = new Chart(document.getElementById("@prefix-chart").getContext("2d"), csConfigWeeklySalesTimeSeries);
                                    } else {
                                        window.customerStatistics.config.data.labels = csLabels;
                                        window.customerStatistics.config.data.datasets[0].data = csData;
                                        window.customerStatistics.update();
                                    }
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                }
                            });
                        }
                        drawWeeklySalesPredictionByTimeSeries(model);

                        var csConfigMonthlyCategoryCombinedSales = {
                            type: 'line',
                            data: {
                                labels: [],
                                datasets: [
                                    {
                                        label: "@T("Plugins.NopStation.InventoryPrediction.Report.WeeklySalesQuantity")",
                                        fillColor: "rgba(60,141,188,0.9)",
                                        strokeColor: "rgba(60,141,188,0.8)",
                                        pointColor: "#00a65a",
                                        pointStrokeColor: "rgba(0,166,90,1)",
                                        pointHighlightFill: "#fff",
                                        pointHighlightStroke: "rgba(0,166,90,1)",
                                        borderColor: 'rgba(0,166,90, 1)',
                                        backgroundColor: 'rgba(0,166,90,0.5)',
                                        pointBorderColor: 'rgba(0,166,90,0.7)',
                                        pointBackgroundColor: 'rgba(0,166,90,0.2)',
                                        pointBorderWidth: 1,
                                        data: []
                                    }
                                ]
                            },
                            options: {
                                legend: {
                                    display: false
                                },
                                scales: {
                                    xAxes: [{
                                        display: true,
                                        ticks: {
                                            userCallback: function (dataLabel, index) {
                                                if (window.customerStatisticsMonthlySales && window.customerStatisticsMonthlySales.config.data.labels.length > 20) {
                                                    return index % 5 === 0 ? dataLabel : '';
                                                }
                                                return dataLabel;
                                            }
                                        },

                                    }],
                                    yAxes: [{
                                        display: true,
                                        ticks: {
                                            userCallback: function (dataLabel, index) {
                                                return (dataLabel ^ 0) === dataLabel ? dataLabel : '';
                                            },
                                            min: 0
                                        },
                                    }],
                                },
                                showScale: true,
                                scaleShowGridLines: false,
                                scaleGridLineColor: "rgba(0,0,0,.05)",
                                scaleGridLineWidth: 1,
                                scaleShowHorizontalLines: true,
                                scaleShowVerticalLines: true,
                                bezierCurve: true,
                                pointDot: false,
                                pointDotRadius: 4,
                                pointDotStrokeWidth: 1,
                                pointHitDetectionRadius: 20,
                                datasetStroke: true,
                                datasetFill: true,
                                maintainAspectRatio: false,
                                responsive: true,
                            }
                        };
                        function drawMonthlyCategoriesCombinedSales(model) {
                            var csLabels = [];
                            var csData = [];
                            console.log("Model: ", model);
                            $.ajax({
                                cache: false,
                                type: "GET",
                                url: "/Admin/SalesForecasting/GetMonthlyCategoriesCombinedSales",
                                data: {
                                    CategoryId: model.CategoryId,
                                    DiscountPercentage: model.DiscountPercentage,
                                    ShippingCharge: model.ShippingCharge,
                                    LocationId: model.LocationId
                                },
                                success: function (data, textStatus, jqXHR) {
                                    for (var i = 0; i < data.length; i++) {
                                        csLabels.push(data[i].XLabelName);
                                        csData.push(data[i].YLabelValue);
                                    }
                                    if (!window.customerStatisticsMonthlySales) {
                                        csConfigMonthlyCategoryCombinedSales.data.labels = csLabels;
                                        csConfigMonthlyCategoryCombinedSales.data.datasets[0].data = csData;
                                        window.customerStatisticsMonthlySales = new Chart(document.getElementById("@prefix-chart-monthly-combined").getContext("2d"), csConfigMonthlyCategoryCombinedSales);
                                    } else {
                                        window.customerStatisticsMonthlySales.config.data.labels = csLabels;
                                        window.customerStatisticsMonthlySales.config.data.datasets[0].data = csData;
                                        window.customerStatisticsMonthlySales.update();
                                    }
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                }
                            });
                        }
                        drawMonthlyCategoriesCombinedSales(model);



                        var csConfigMonthlyCategoryCombinedSalesPieChart = {
                            type: 'doughnut',
                            data: {
                                labels: [],
                                datasets: [
                                    {
                                        borderColor: 'rgba(0,166,90, 1)',
                                        backgroundColor: [],
                                        data: []
                                    }
                                ]
                            },
                            options: {

                            }
                        }
                        function drawMonthlyCategoriesCombinedSalesPieChart(model) {
                            var csLabels = [];
                            var csData = [];
                            var csBackGroundColor = [];
                            console.log("Model: ", model);
                            $.ajax({
                                cache: false,
                                type: "GET",
                                url: "/Admin/SalesForecasting/GetMonthlyCategoriesCombinedSalesContribution",
                                data: {
                                    CategoryId: model.CategoryId,
                                    DiscountPercentage: model.DiscountPercentage,
                                    ShippingCharge: model.ShippingCharge,
                                    LocationId: model.LocationId
                                },
                                success: function (data, textStatus, jqXHR) {
                                    for (var i = 0; i < data.length; i++) {
                                        csLabels.push(data[i].XLabelName);
                                        csData.push(data[i].YLabelValue);
                                        csBackGroundColor.push(color[i]);
                                    }
                                    if (!window.customerStatisticsMonthlySalesPieChart) {
                                        csConfigMonthlyCategoryCombinedSalesPieChart.data.labels = csLabels;
                                        csConfigMonthlyCategoryCombinedSalesPieChart.data.datasets[0].data = csData;
                                        csConfigMonthlyCategoryCombinedSalesPieChart.data.datasets[0].backgroundColor = csBackGroundColor;
                                        window.customerStatisticsMonthlySalesPieChart = new Chart(document.getElementById("@prefix-chart-monthly-category-contribution-pie").getContext("2d"), csConfigMonthlyCategoryCombinedSalesPieChart);
                                    } else {
                                        window.customerStatisticsMonthlySalesPieChart.config.data.labels = csLabels;
                                        window.customerStatisticsMonthlySalesPieChart.config.data.datasets[0].data = csData;
                                        window.customerStatisticsMonthlySalesPieChart.config.data.datasets[0].backgroundColor = csBackGroundColor;
                                        window.customerStatisticsMonthlySalesPieChart.update();
                                    }
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                }
                            });
                        }
                        drawMonthlyCategoriesCombinedSalesPieChart(model);


                        var csConfigMonthlyCategorySalesBarChart = {
                            type: "bar",
                            data: {
                                labels: [],
                                datasets: [
                                    {
                                        label: "Predicted Sales",
                                        data: [],
                                        fill: false,
                                        backgroundColor: [],
                                        borderWidth: 1
                                    },
                                    {
                                        label: "In Stock",
                                        data: [],
                                        fill: false,
                                        backgroundColor: [],
                                        borderWidth: 1
                                    }
                                ]
                            },
                            options: {
                                scales: {
                                    yAxes: [
                                        {
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                                }
                            }
                        }
                        function drawMonthlyCategoriesSalesBarChart(model) {
                            var csLabels = [];
                            var csDataPredicted = [];
                            var csDataInStock = [];
                            var csBackGroundColorPredicted = [];
                            var csBackGroundColorInStock = [];
                            console.log("Model: ", model);
                            $.ajax({
                                cache: false,
                                type: "GET",
                                url: "/Admin/SalesForecasting/GetMonthlyCategoriesPredictedSalesVsStock",
                                data: {
                                    CategoryId: model.CategoryId,
                                    DiscountPercentage: model.DiscountPercentage,
                                    ShippingCharge: model.ShippingCharge,
                                    LocationId: model.LocationId
                                },
                                success: function (data, textStatus, jqXHR) {
                                    for (var i = 0; i < data.length; i++) {
                                        csLabels.push(data[i].XLabelName);
                                        csDataPredicted.push(data[i].YLabelValuePredicted);
                                        csDataInStock.push(data[i].YLabelValueInStock)
                                        csBackGroundColorPredicted.push(color[1]);
                                        csBackGroundColorInStock.push(color[0]);
                                    }
                                    if (!window.customerStatisticsMonthlySalesBarChart) {
                                        csConfigMonthlyCategorySalesBarChart.data.labels = csLabels;
                                        csConfigMonthlyCategorySalesBarChart.data.datasets[0].data = csDataPredicted;
                                        csConfigMonthlyCategorySalesBarChart.data.datasets[1].data = csDataInStock;
                                        csConfigMonthlyCategorySalesBarChart.data.datasets[0].backgroundColor = csBackGroundColorPredicted;
                                        csConfigMonthlyCategorySalesBarChart.data.datasets[1].backgroundColor = csBackGroundColorInStock;
                                        window.customerStatisticsMonthlySalesBarChart = new Chart(document.getElementById("@prefix-chart-category-vs-stock-bar-chart").getContext("2d"), csConfigMonthlyCategorySalesBarChart);
                                    } else {
                                        window.customerStatisticsMonthlySalesBarChart.config.data.labels = csLabels;
                                        window.customerStatisticsMonthlySalesBarChart.config.data.datasets[0].data = csDataPredicted;
                                        window.customerStatisticsMonthlySalesBarChart.config.data.datasets[1].data = csDataInStock;
                                        window.customerStatisticsMonthlySalesBarChart.config.data.datasets[0].backgroundColor = csBackGroundColorPredicted;
                                        window.customerStatisticsMonthlySalesBarChart.config.data.datasets[1].backgroundColor = csBackGroundColorInStock;
                                        window.customerStatisticsMonthlySalesBarChart.update();
                                    }
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                }
                            });
                        }
                        drawMonthlyCategoriesSalesBarChart(model);

                        $('#search-analysis').on('click', function () {

                        });
                    @if (!hideCard)
                    {
                        <text>
                                $('#search-analysis').trigger('click');
                        </text>
                    }});
                </script>
            </div>
        </div>
    </div>
</section>